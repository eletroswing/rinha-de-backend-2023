version: '3'
services:
  api1:
    build:
      context: ./..
      dockerfile: Dockerfile
    expose:
      - "80"
    ports:
      - "3004:80"
    depends_on:
      - database
      - pubsub
    links:
      - database
      - pubsub
    volumes:
      - .:/app_directory
    environment:
      PORT: 80
      DATABASE_URL: postgres://myuser:mypassword@database:5432/mydatabase
      POSTGRES_DB: mydatabase
      POSTGRES_PASSWORD: mypassword
      POSTGRES_USER: myuser
      POSTGRES_HOST: database
      PUBSUB: ws://localhost:8080

  api2:
    build:
      context: ./..
      dockerfile: Dockerfile
    expose:
      - "80"
    ports:
      - "3005:80"
    depends_on:
      - database
      - pubsub
    links:
      - database
      - pubsub
    volumes:
      - .:/app_directory
    environment:
      PORT: 80
      DATABASE_URL: postgres://myuser:mypassword@database:5432/mydatabase
      POSTGRES_DB: mydatabase
      POSTGRES_PASSWORD: mypassword
      POSTGRES_USER: myuser
      POSTGRES_HOST: database
      REDIS_PORT: 6379
      REDIS_HOST: redis
      PUBSUB: ws://localhost:8080

  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  pubsub:
    image: eufountai/socket-pubsub:latest
    ports:
      - "8080:8080"

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"